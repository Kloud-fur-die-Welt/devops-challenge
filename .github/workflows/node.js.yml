# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: kloudfuerdieweltcrmanual.azurecr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: application_api

jobs:
  test:
    defaults:
      run: 
        shell: bash
        working-directory: application/${{ matrix.project }}
        
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        project: [frontend, api]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache-dependency-path: application/${{ matrix.project }}/package-lock.json
        cache: 'npm'

    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
    
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        tags: [kloudfuerdieweltcrmanual.azurecr.io/application-frontend, kloudfuerdieweltcrmanual.azurecr.io/application-api, kloudfuerdieweltcrmanual.azurecr.io/application-mongo-seed]
        #include:
        #  - dockerfile: /application/frontend/Dockerfile
        #    image: kloudfuerdieweltcrmanual.azurecr.io/application-frontend
        #  - dockerfile: /application/api/Dockerfile
        #    image: kloudfuerdieweltcrmanual.azurecr.io/application-api
        #  - dockerfile: /application/db-seed/Dockerfile
        #    image: kloudfuerdieweltcrmanual.azurecr.io/application-mongo-seed
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
      
    steps:
      - name: Run first
        run: az login -u KloudfuerdieWeltCRmanual -p nnGSphB5R0G3n8AlF=n68HOtYB1ux6O8
      - name: Run second
        run: az acr login --name KloudfuerdieWeltCRmanual
      - name: Run thrid
        run: docker build
      - name: Run forth
        run: docker tag application_api kloudfuerdieweltcrmanual.azurecr.io/application-api
      - name: Docker push
        run: docker push kloudfuerdieweltcrmanual.azurecr.io/application-api
