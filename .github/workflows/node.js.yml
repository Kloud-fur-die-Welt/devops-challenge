# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: kloudfuerdieweltcrmanual.azurecr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: application_api

jobs:
  test:
    defaults:
      run: 
        shell: bash
        working-directory: application/${{ matrix.project }}
        
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        project: [frontend, api]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache-dependency-path: application/${{ matrix.project }}/package-lock.json
        cache: 'npm'

    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
    
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        project: [api, frontend, db-seed] 
        
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
      
    steps:
      - name: Checkout 
        uses: actions/checkout@v2
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      #- name: login 
      #- name: Microsoft Azure Container Registry Login
      #  # You may pin to the exact commit or the version
      #  uses: elgohr/acr-login-action@0.1
      #  with:
      #    # The ACR service principal to use for login
      #    service_principal: KloudfuerdieWeltCRmanual
      #    # The password of the service principal
      #    service_principal_password: nnGSphB5R0G3n8AlF=n68HOtYB1ux6O8
      #    # The ACR tenant to use for login
      #    tenant: bfe3e775-4326-4a0a-92dc-b73064a9ce24
      #    # The ACR registry to use
      #    registry: KloudfuerdieWeltCRmanual
      #    # The ACR repository to use
      #    repository: ${{ matrix.project }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./${{ matrix.project }}
          file: application/${{ matrix.project }}/Dockerfile
          push: true
          tags: ${{ matrix.project }}
